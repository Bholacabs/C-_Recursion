// 1. Forward 

#include <iostream>
#include <bits/stdc++.h>
using namespace std;

void subseq(int i,vector<int> &out,int arr[],int n)
{
    if(i>=n)
    {
        for(auto it:out)
        {
            cout<<it<<" ";
        }
        cout<<endl;
        return;
    }
    
    out.push_back(arr[i]);
    subseq(i+1,out,arr,n);
    out.pop_back();
    subseq(i+1,out,arr,n);
}

int main()
{
    int n;
    n=3;
    int arr[]={3,1,2};
    vector<int> out;
    
    subseq(0,out,arr,n);
    
    return 0;
}

//2. Reverse (In it I am non-taking (element at i index) and 
//            then I take (element in i index) so at last when
//            its over I return I have to pop to get to original). 

#include <iostream>
#include <bits/stdc++.h>
using namespace std;

void subseq(int i,vector<int> &out,int arr[],int n)
{
    if(i>=n)
    {
        for(auto it:out)
        {
            cout<<it<<" ";
        }
        cout<<endl;
        return;
    }
    
    subseq(i+1,out,arr,n);
    out.push_back(arr[i]);
    subseq(i+1,out,arr,n);
    out.pop_back();
}

int main()
{
    int n;
    n=3;
    int arr[]={3,1,2};
    vector<int> out;
    
    subseq(0,out,arr,n);
    
    return 0;
}